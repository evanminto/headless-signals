{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEOO,SAAS,0CAAS,MAAM;IAC7B,OAAO,CAAA,GAAA,eAAO,EAAE,IAAM,OAAO,KAAK;AACpC;;;;;;;;AEFO,SAAS,0CAAI,YAAY;IAC9B,MAAM,YAAY,CAAA,GAAA,aAAK,EAAE;IAEzB;;;GAGC,GACD,MAAM,QAAQ,CAAC;QACb,UAAU,KAAK,GAAG;IACpB;IAEA,OAAO,cAAc,CAAC,OAAO,WAAW;QACtC;YACE,OAAO,UAAU,KAAK;QACxB;QACA,YAAY;QACZ,cAAc;IAChB;IAEA,OAAO;AACT;AAMO,SAAS,0CAAa,IAAI;IAC/B,2CAA2C,GAC3C,MAAM,SAAS;IAEf,CAAA,GAAA,aAAK,EAAE;QACL,KAAK,OAAO,CAAC,CAAC,MAAQ,IAAI,OAAO,OAAO;IAC1C;IAEA,OAAO;AACT;;;;ADhCO,SAAS,0CAAc,SAAS,EAAE,QAAQ;IAC/C,iDAAiD,GACjD,MAAM,YAAY,CAAA,GAAA,yCAAE;IACpB,0FAA0F,GAC1F,MAAM,cAAc,CAAA,GAAA,aAAK,EAAE;IAE3B,MAAM,MAAM,CAAA,GAAA,aAAK,EAAE;QACjB,MAAM,aAAa,IAAI;QACvB,UAAU,OAAO,EAAE,iBACjB,WACA,yDAAyD,GACzD,aAAa;QACb,CAAC;YACC,YAAY,KAAK,GAAG;YACpB,WAAW;QACb,GACA;YAAE,QAAQ,WAAW,MAAM;QAAC;QAG9B,OAAO,IAAM,WAAW,KAAK;IAC/B;IAEA,OAAO;mBAAE;QAAW,KAAK;QAAW,OAAO,CAAA,GAAA,yCAAO,EAAE;aAAc;IAAI;AACxE;;;AF7BO,SAAS;IACd,4DAA4D,GAC5D,MAAM,UAAU,CAAA,GAAA,aAAK,EAAE;IACvB,MAAM,EAAE,WAAW,WAAW,EAAE,OAAO,OAAO,EAAE,KAAK,KAAK,EAAE,GAAG,CAAA,GAAA,yCAAY,EAAE;IAC7E,MAAM,EAAE,WAAW,YAAY,EAAE,OAAO,QAAQ,EAAE,KAAK,MAAM,EAAE,GAAG,CAAA,GAAA,yCAAY,EAAE;IAChF,YAAY,SAAS,IAAI;IACzB,aAAa,SAAS,IAAI;IAE1B,MAAM,cAAc,CAAA,GAAA,aAAK,EAAE;QACzB,IAAI,QAAQ,KAAK,EACf,QAAQ,KAAK,GAAG,SAAS,aAAa;IAE1C;IAEA,MAAM,eAAe,CAAA,GAAA,aAAK,EAAE;QAC1B,IAAI,SAAS,KAAK,EAChB,QAAQ,KAAK,GAAG,SAAS,aAAa;IAE1C;IAEA,OAAO;QACL,SAAS,CAAA,GAAA,yCAAO,EAAE;QAClB,KAAK;YACH;YACA;YACA;YACA;QACF;IACF;AACF;;;;;;;;AIvBO,SAAS,0CAAU,MAAM,EAAE,UAAU,KAAO,CAAC,EAAE,WAAE,UAAU,MAAM,GAAG,CAAC,CAAC;IAC3E,yDAAyD,GACzD,MAAM,OAAO,CAAA,GAAA,aAAK,EAAE;IACpB,MAAM,YAAY,CAAA,GAAA,aAAK,EAAE;IACzB,MAAM,OAAO,CAAA,GAAA,eAAO,EAAE;IAEtB,MAAM,MAAM;QACV,UAAU,KAAK,GAAG;QAClB,KAAK,KAAK,GAAG,MAAM,OAAO,KAAK,KAAK;QACpC,UAAU,KAAK,GAAG;IACpB;IAEA,MAAM,MAAM,UAAU,CAAA,GAAA,aAAK,EAAE,OAAO,KAAO;IAE3C,OAAO;QACL,MAAM,CAAA,GAAA,yCAAO,EAAE;QACf,WAAW,CAAA,GAAA,yCAAO,EAAE;aACpB;aACA;IACF;AACF;;;;;;;;AC3BO,SAAS;IACd,MAAM,SAAS,CAAA,GAAA,aAAK,EAAE;IACtB,MAAM,OAAO,OAAO;QAClB,IAAI,CAAE,CAAA,eAAe,SAAQ,GAC3B,OAAO;QAGT,OAAO,UAAU,SAAS,CACvB,SAAS,CAAC,MACV,IAAI,CAAC,IAAO,OAAO,KAAK,GAAG;IAChC;IAEA,OAAO;QACL,QAAQ,CAAA,GAAA,yCAAO,EAAE;cACjB;IACF;AACF;;;;;;;ACbO,SAAS,0CAAM,YAAE,WAAW,MAAM,GAAG,CAAC,CAAC;IAC5C,MAAM,OAAO,CAAA,GAAA,aAAK,EAAE,IAAI;IACxB,MAAM,aAAa,YAAY,IAAO,KAAK,KAAK,GAAG,IAAI,QAAS;IAEhE,OAAO;cACL;QACA,KAAK,IAAM,cAAc;IAC3B;AACF;;;;;;;;ACPO,SAAS,0CAAS,OAAO;IAC9B,sDAAsD,GACtD,MAAM,QAAQ,CAAA,GAAA,aAAK,EAAE;IACrB,MAAM,YAAY,CAAA,GAAA,aAAK,EAAE;IACzB,0DAA0D,GAC1D,MAAM,QAAQ,CAAA,GAAA,aAAK,EAAE;IAErB,QACG,IAAI,CAAC,CAAC;QACL,MAAM,KAAK,GAAG;QACd,UAAU,KAAK,GAAG;IACpB,GACC,KAAK,CAAC,CAAC,IAAO,MAAM,KAAK,GAAG;IAE/B,OAAO;QACL,OAAO,CAAA,GAAA,yCAAO,EAAE;QAChB,WAAW,CAAA,GAAA,yCAAO,EAAE;QACpB,OAAO,CAAA,GAAA,yCAAO,EAAE;IAClB;AACF;;;;;;;;;;;;;;;;;;AErBO,SAAS;IACd,MAAM,OAAO,CAAA,GAAA,aAAK,EAAE;IAEpB,MAAM,EAAE,KAAK,YAAY,EAAE,KAAK,YAAY,EAAE,GAAG,CAAA,GAAA,yCAAY,EAC3D,aACA,IAAO,KAAK,KAAK,GAAG;IAGtB,MAAM,EAAE,KAAK,UAAU,EAAE,KAAK,UAAU,EAAE,GAAG,CAAA,GAAA,yCAAY,EACvD,WACA,IAAO,KAAK,KAAK,GAAG;IAGtB,MAAM,MAAM;QACV;QACA;IACF;IAEA,OAAO;QACL,kDAAkD,GAClD,aAAa;QACb,KAAK,CAAA,GAAA,yCAAW,EAAE;YAAC;YAAc;SAAW;QAC5C,MAAM,CAAA,GAAA,yCAAO,EAAE;aACf;QACA,SAAS;IACX;AACF;;;ADrBO,SAAS,0CAAU,WAAE,OAAO,EAAE,GAAG,CAAC,CAAC;IACxC,MAAM,WAAW,CAAA,GAAA,aAAK,EAAE;IAExB,uEAAuE,GACvE,MAAM,EAAE,KAAK,YAAY,EAAE,KAAK,YAAY,EAAE,GAAG,CAAA,GAAA,yCAAY,EAC3D,aACA,CAAC;QACC,SAAS,KAAK,GAAG;QAEjB,IAAI,SACF,MAAM,YAAY,EAAE,WAAW,QAAQ;IAE3C;IAGF,qEAAqE,GACrE,MAAM,EAAE,KAAK,UAAU,EAAE,KAAK,UAAU,EAAE,GAAG,CAAA,GAAA,yCAAY,EAAE,WAAW;QACpE,SAAS,KAAK,GAAG;IACnB;IAEA,MAAM,EACJ,KAAK,SAAS,EACd,MAAM,mBAAmB,EACzB,KAAK,YAAY,EAClB,GAAG,CAAA,GAAA,yCAAQ;IAEZ,MAAM,YAAY,CAAA,GAAA,yCAAW,EAAE;QAAC;QAAc;KAAW;IACzD,MAAM,cAAc,CAAA,GAAA,eAAO,EACzB,IAAM,CAAC,UAAU,OAAO,IAAI,oBAAoB,KAAK;IAGvD,MAAM,MAAM,CAAA,GAAA,aAAK,EAAE;QACjB,MAAM,SAAS,UAAU,OAAO;QAEhC,IAAI,QACF,OAAO,SAAS,GAAG,YAAY,KAAK;IAExC;IAEA,OAAO;QACL,KAAK;mBACL;QACA,UAAU,CAAA,GAAA,yCAAO,EAAE;QACnB,KAAK;YACH;YACA;YACA;YACA;QACF;IACF;AACF;AAMO,SAAS,0CAAU,UAAE,MAAM,EAAE,GAAG,CAAC,CAAC;IACvC,MAAM,WAAW,CAAA,GAAA,aAAK,EAAE;IAExB,uEAAuE,GACvE,MAAM,EAAE,KAAK,YAAY,EAAE,KAAK,YAAY,EAAE,GAAG,CAAA,GAAA,yCAAY,EAC3D,aACA,CAAC;QACC,MAAM,cAAc;QACpB,SAAS,KAAK,GAAG;IACnB;IAGF,sEAAsE,GACtE,MAAM,EAAE,KAAK,WAAW,EAAE,KAAK,WAAW,EAAE,GAAG,CAAA,GAAA,yCAAY,EACzD,YACA,CAAC,QAAU,MAAM,cAAc;IAGjC,uEAAuE,GACvE,MAAM,EAAE,KAAK,YAAY,EAAE,KAAK,YAAY,EAAE,GAAG,CAAA,GAAA,yCAAY,EAC3D,aACA,CAAC;QACC,MAAM,cAAc;QACpB,MAAM,WAAE,OAAO,WAAE,OAAO,EAAE,GAAG;QAC7B,MAAM,OAAO,aAAa,OAAO,EAAE;QAEnC,IACE,QACC,CAAA,WAAW,KAAK,GAAG,IAClB,WAAW,KAAK,MAAM,IACtB,WAAW,KAAK,IAAI,IACpB,WAAW,KAAK,KAAK,AAAD,GAEtB,SAAS,KAAK,GAAG;IAErB;IAGF,kEAAkE,GAClE,MAAM,EAAE,KAAK,OAAO,EAAE,KAAK,OAAO,EAAE,GAAG,CAAA,GAAA,yCAAY,EAAE,QAAQ,CAAC;QAC5D,SAAS,KAAK,GAAG;QACjB,SAAS;IACX;IAEA,MAAM,YAAY,CAAA,GAAA,yCAAW,EAAE;QAC7B;QACA;QACA;QACA;KACD;IAED,OAAO;QACL,KAAK;QACL,UAAU,CAAA,GAAA,yCAAO,EAAE;QACnB,KAAK;YACH;YACA;YACA;YACA;QACF;IACF;AACF;;;;;;;;;;AE3HO,SAAS;IACd,2DAA2D,GAC3D,MAAM,YAAY,CAAA,GAAA,yCAAE;IACpB,MAAM,WAAE,OAAO,OAAE,GAAG,EAAE,GAAG,CAAA,GAAA,yCAAY;IAErC,OAAO;QACL,KAAK;QACL,WAAW,CAAA,GAAA,eAAO,EAChB,IAAM,QAAQ,KAAK,YAAY,eAAe,UAAU,OAAO,KAAK,QAAQ,KAAK;QAEnF,oCAAoC,GACpC,OAAO,CAAC;YACN,UAAU,OAAO,EAAE,MAAM;QAC3B;QACA,SAAS;IACX;AACF;;;;;;;;;;ACdO,SAAS,0CAAU,OAAO;IAC/B,6BAA6B,GAC7B,SAAS,UAAU,OAAO;QACxB,oCAAoC,GACpC,MAAM,eAAe,QAAQ,gBAAgB,CAC3C;QAEF,MAAM,mBAAmB,YAAY,CAAC,EAAE;QACxC,MAAM,kBAAkB,YAAY,CAAC,aAAa,MAAM,GAAG,EAAE;QAC7D,MAAM,cAAc;QAEpB;;KAEC,GACD,MAAM,WAAW,CAAC;YAChB,MAAM,eAAe,EAAE,GAAG,KAAK,SAAS,EAAE,OAAO,KAAK;YAEtD,IAAI,CAAC,cACH;YAGF,IAAI,EAAE,QAAQ,EACZ,eAAe,GAAG;gBAAA,IAAI,SAAS,aAAa,KAAK,kBAAkB;oBACjE,gBAAgB,KAAK;oBACrB,EAAE,cAAc;gBAClB;YAAA,OAEA,IAAI,SAAS,aAAa,KAAK,iBAAiB;gBAC9C,iBAAiB,KAAK;gBACtB,EAAE,cAAc;YAClB;QAEJ;QAEA,aAAa;QACb,QAAQ,gBAAgB,CAAC,WAAW;QAEpC,OAAO;IACT;IAEA;;;GAGC,GACD,SAAS,YAAY,OAAO,EAAE,QAAQ;QACpC,aAAa;QACb,QAAQ,mBAAmB,CAAC,WAAW;IACzC;IAEA,MAAM,EAAE,IAAI,aAAa,UAAE,MAAM,EAAE,GAAG,CAAA,GAAA,0DAAU,EAAE,QAAQ;IAC1D,kDAAkD,GAClD,MAAM,YAAY,CAAA,GAAA,yCAAE;IAEpB,CAAA,GAAA,aAAK,EAAE;QACL,IAAI,CAAC,cAAc,KAAK,EACtB;QAGF,MAAM,UAAU,UAAU,OAAO;QAEjC,IAAI,SAAS;YACX,MAAM,WAAW,UAAU;YAE3B,OAAO,IAAM,YAAY,SAAS;QACpC;IACF;IAEA,OAAO;QACL,SAAS,CAAA,GAAA,yCAAO,EAAE;QAClB,KAAK;gBACL;IACF;AACF;;;;;;;;;;;ACxEO,SAAS;IACd,+CAA+C,GAC/C,MAAM,YAAY,CAAA,GAAA,yCAAE;IACpB,MAAM,EACJ,WAAW,WAAW,SACtB,KAAK,EACL,KAAK,WAAW,EACjB,GAAG,CAAA,GAAA,yCAAY,EAAE;IAClB,MAAM,EAAE,SAAS,QAAQ,EAAE,KAAK,SAAS,EAAE,GAAG,CAAA,GAAA,yCAAY;IAC1D,MAAM,mBAAmB,CAAA,GAAA,eAAO,EAAE,IAAM,CAAC,UAAU,OAAO;IAC1D,MAAM,oBAAoB,CAAA,GAAA,eAAO,EAC/B,IACE,UAAU,OAAO,EAAE,SAAS,SAAS,KAAK,KAC1C,UAAU,OAAO,KAAK,SAAS,KAAK;IAExC,MAAM,cAAc,CAAA,GAAA,eAAO,EACzB,IAAM,iBAAiB,KAAK,IAAI,kBAAkB,KAAK;IAGzD,MAAM,MAAM,CAAA,GAAA,aAAK,EAAE,IAAM,YAAY,YAAY,KAAK,GAAG,SAAS;IAElE,OAAO,CAAA,GAAA,0DAAW,EAAE;QAClB,KAAK;eACL;QACA,KAAK;YACH;YACA;YACA;QACF;IACF;AACF;;;;;;;;;AEpCA;;;;CAIC,GACM,SAAS,0CAAa,GAAG;IAC9B,OAAO;QAAE,GAAG,GAAG;QAAE,SAAS,IAAI,GAAG;IAAC;AACpC;;;ADHA;;;CAGC,GACD,SAAS,+BAAS,GAAG;IACnB,OAAO,OAAO,aAAa,OAAO,WAAW;AAC/C;AAGO,SAAS,0CAAW,KAAK;IAC9B,MAAM,aAAE,SAAS,SAAE,KAAK,OAAE,GAAG,EAAE,GAAG,CAAA,GAAA,yCAAY,EAAE;IAChD,UAAU,OAAO,UAAU,CAAC;IAE5B,MAAM,SAAS,CAAA,GAAA,eAAO,EAAE,IACtB,+BAAS,UAAU,OAAO,IAAI,UAAU,OAAO,GAAG;IAGpD,OAAO,CAAA,GAAA,yCAAW,EAAE;eAClB;QACA,SAAS,CAAA,GAAA,eAAO,EAAE;YAChB,QAAQ,GAAG,CAAC,OAAO,KAAK;YACxB,OAAO,QACL,MAAM,KAAK,GAAG,MAAM,KAAK,EAAE,UAAU,OAAO,KAAK,EAAE;QAEvD;aACA;QACA,SAAS;IACX;AACF;;;;;;;;;;AEvBO,SAAS,0CAAiB,WAAE,OAAO,cAAE,UAAU,EAAE,GAAG,CAAC,CAAC;IAC3D,+CAA+C,GAC/C,MAAM,YAAY,CAAA,GAAA,yCAAE;IACpB,8DAA8D,GAC9D,MAAM,gBAAgB,CAAA,GAAA,aAAK,EAAE,EAAE;IAE/B,MAAM,WAAW,IAAI,iBAAiB,CAAC,SAAS;QAC9C,cAAc,KAAK,GAAG;QACtB,aAAa,SAAS;IACxB;IAEA,MAAM,YAAY,CAAA,GAAA,aAAK,EAAE;QACvB,IAAI,UAAU,OAAO,EACnB,SAAS,OAAO,CAAC,UAAU,OAAO,EAAE;QAGtC,OAAO,IAAM,SAAS,UAAU;IAClC;IAEA,OAAO;QACL,KAAK;QACL,SAAS,CAAA,GAAA,yCAAO,EAAE;QAClB,UAAU,CAAA,GAAA,eAAO,EAAE,IAAM;QACzB,KAAK;QACL,SAAS;IACX;AACF;;;;;;;;;AC1BO,SAAS,0CAAe,YAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;IAC9C,yDAAyD,GACzD,MAAM,YAAY,CAAA,GAAA,yCAAE;IACpB,mEAAmE,GACnE,MAAM,UAAU,CAAA,GAAA,aAAK,EAAE,EAAE;IACzB,MAAM,QAAQ,CAAA,GAAA,eAAO,EACnB,IAAM,QAAQ,KAAK,CAAC,IAAI,CAAC,CAAC,UAAE,MAAM,EAAE,GAAK,WAAW,UAAU,OAAO,KAAK;IAG5E,MAAM,WAAW,IAAI,eAAe,CAAC,WAAW;QAC9C,QAAQ,KAAK,GAAG;QAChB,WAAW,WAAW;IACxB;IAEA,MAAM,UAAU,CAAA,GAAA,aAAK,EAAE;QACrB,MAAM,KAAK,UAAU,OAAO;QAE5B,IAAI,IAAI;YACN,SAAS,OAAO,CAAC;YAEjB,OAAO,IAAM,SAAS,SAAS,CAAC;QAClC;IACF;IAEA,OAAO;QACL,KAAK;QACL,OAAO,CAAA,GAAA,yCAAO,EAAE;iBAChB;IACF;AACF;;;;;;;;;;;;;;;;;;;;;;;ACtCA;;;;;;CAMC,GAED;;;;CAIC,GACM,SAAS,0CAAe,YAAY,EAAE,YAAY;IACvD,IAAI,yBAAyB,UAC3B,OAAO;QACL,UAAU;YACR,aAAa;YACb,MAAM,KAAK,SAAS,mBAAmB,CAAC;YACxC,eAAe;QACjB;IACF;IAGF,OAAO;QAAE,UAAU;IAAa;AAClC","sources":["src/tools.js","src/tools/activeElement.js","src/readonly.js","src/tools/eventListener.js","src/ref.js","src/tools/asyncTask.js","src/tools/clipboard.js","src/tools/clock.js","src/tools/deferred.js","src/tools/dragAndDrop.js","src/tools/mousedown.js","src/tools/focusManagement.js","src/tools/focusTrap.js","src/tools/keyboardListener.js","src/tools/mediaQuery.js","src/helpers/endToDispose.js","src/tools/mutationObserver.js","src/tools/resizeObserver.js","src/tools/viewTransition.js"],"sourcesContent":["export * from './tools/activeElement.js';\nexport * from './tools/asyncTask.js';\nexport * from './tools/clipboard.js';\nexport * from './tools/clock.js';\nexport * from './tools/deferred.js';\nexport * from './tools/dragAndDrop.js';\nexport * from './tools/eventListener.js';\nexport * from './tools/focusManagement.js';\nexport * from './tools/focusTrap.js';\nexport * from './tools/keyboardListener.js';\nexport * from './tools/list.js';\nexport * from './tools/mediaQuery.js';\nexport * from './tools/mousedown.js';\nexport * from './tools/mutationObserver.js';\nexport * from './tools/resizeObserver.js';\nexport * from './tools/toggleValue.js';\n","import { effect, signal } from \"@preact/signals-core\";\nimport { readonly } from \"../readonly.js\";\nimport { eventListener } from \"./eventListener.js\";\n\nexport function activeElement() {\n  /** @type {import('../global.d.ts').Signal<Element | null>} */\n  const element = signal(null);\n  const { targetRef: inTargetRef, event: inEvent, end: endIn } = eventListener('focusin');\n  const { targetRef: outTargetRef, event: outEvent, end: endOut } = eventListener('focusout');\n  inTargetRef(document.body);\n  outTargetRef(document.body);\n\n  const endInEffect = effect(() => {\n    if (inEvent.value) {\n      element.value = document.activeElement;\n    }\n  });\n\n  const endOutEffect = effect(() => {\n    if (outEvent.value) {\n      element.value = document.activeElement;\n    }\n  });\n\n  return {\n    element: readonly(element),\n    end: () => {\n      endInEffect();\n      endOutEffect();\n      endIn();\n      endOut();\n    }\n  };\n}\n","import { computed } from \"@preact/signals-core\";\n\n/**\n * @template T\n * @param {import('@preact/signals-core').Signal<T>} signal \n * @returns {import('@preact/signals-core').ReadonlySignal<T>}\n */\nexport function readonly(signal) {\n  return computed(() => signal.value);\n}","import { effect, signal } from \"@preact/signals-core\";\nimport { ref } from \"../ref.js\";\nimport { readonly } from \"../readonly.js\";\n\n/**\n * @template {import('../global.d.ts').EventName} T\n * @template {EventTarget} Target\n * @param {T} eventName\n * @param {(event: import('../global.d.ts').EventType<T>) => void} [callback]\n */\nexport function eventListener(eventName, callback) {\n  /** @type {import('../global.d.ts').Ref<Target>} */\n  const targetRef = ref();\n  /** @type {import('../global.d.ts').Signal<import('../global.d.ts').EventType<T> | null>} */\n  const eventSignal = signal(null);\n\n  const end = effect(() => {\n    const controller = new AbortController();\n    targetRef.current?.addEventListener(\n      eventName,\n      /** @param {import('../global.d.ts').EventType<T>} event */\n      // @ts-ignore\n      (event) => {\n        eventSignal.value = event;\n        callback?.(event);\n      },\n      { signal: controller.signal }\n    );\n\n    return () => controller.abort();\n  });\n  \n  return { targetRef, ref: targetRef, event: readonly(eventSignal), end };\n}\n","import { effect, signal } from '@preact/signals-core';\n\n/**\n * @template T\n * @param {T | undefined} [initialValue]\n * @returns {import('./global.d.ts').Ref<T>}\n */\nexport function ref(initialValue) {\n  const refSignal = signal(initialValue);\n\n  /**\n   * @param {T | undefined} value \n   * @returns {void}\n   */\n  const refFn = (value) => {\n    refSignal.value = value;\n  };\n\n  Object.defineProperty(refFn, 'current', {\n    get() {\n      return refSignal.value;\n    },\n    enumerable: false,\n    configurable: false,\n  });\n\n  return refFn;\n};\n\n/**\n * @template T\n * @param {import('./global.d.ts').Ref<T>[]} refs\n */\nexport function forwardedRef(refs) {\n  /** @type {import('./global.d.ts').Ref<T>} */\n  const newRef = ref();\n\n  effect(() => {\n    refs.forEach((ref) => ref(newRef.current));\n  });\n\n  return newRef;\n}\n","import { computed, effect, signal } from '@preact/signals-core';\nimport { readonly } from '../readonly.js';\n\n/**\n * @template Dependency\n * @template Data\n * @param {(dep?: Dependency | void) => Promise<Data> | Data} taskFn \n * @param {() => Dependency | void} getDeps \n * @param {{ autoRun?: boolean }} [options]\n */\nexport function asyncTask(taskFn, getDeps = () => {}, { autoRun = true } = {}) {\n  /** @type {import('../global.d.ts').Signal<Data | null>} */\n  const data = signal(null);\n  const isLoading = signal(false);\n  const deps = computed(getDeps);\n\n  const run = async () => {\n    isLoading.value = true;\n    data.value = await taskFn(deps.value);\n    isLoading.value = false;\n  };\n\n  const end = autoRun ? effect(run) : () => {};\n\n  return {\n    data: readonly(data),\n    isLoading: readonly(isLoading),\n    run,\n    end,\n  };\n}\n","import { signal } from '@preact/signals-core';\nimport { readonly } from '../readonly.js';\n\nexport function clipboard() {\n  const copied = signal(false);\n  const copy = async (text) => {\n    if (!('clipboard' in navigator)) {\n      return false;\n    }\n\n    return navigator.clipboard\n      .writeText(text)\n      .then(() => (copied.value = true));\n  };\n\n  return {\n    copied: readonly(copied),\n    copy,\n  };\n}\n","import { signal } from '@preact/signals-core';\n\n/**\n * @param {object} [params]\n * @param {number} [params.interval]\n */\nexport function clock({ interval = 1000 } = {}) {\n  const date = signal(new Date());\n  const intervalId = setInterval(() => (date.value = new Date()), interval);\n\n  return {\n    date,\n    end: () => clearInterval(intervalId),\n  };\n}\n","import { signal } from '@preact/signals-core';\nimport { readonly } from '../readonly.js';\n\n/**\n * @template T\n * @param {Promise<T>} promise\n */\nexport function deferred(promise) {\n  /** @type {import('../global.d.ts').Signal<T | null>} */\n  const value = signal(null);\n  const isPending = signal(true);\n  /** @type {import('../global.d.ts').Signal<Error | null>} */\n  const error = signal(null);\n\n  promise\n    .then((v) => {\n      value.value = v;\n      isPending.value = false;\n    })\n    .catch((e) => (error.value = e));\n\n  return {\n    value: readonly(value),\n    isPending: readonly(isPending),\n    error: readonly(error),\n  };\n}\n","import { computed, effect, signal } from '@preact/signals-core';\nimport { readonly } from '../readonly.js';\nimport { forwardedRef } from '../ref.js';\nimport { eventListener } from './eventListener.js';\nimport { mousedown } from './mousedown.js';\n\n/**\n * @param {object} [params]\n * @param {(event: DragEvent) => [string, string]} [params.getData] Returns a tuple of type and data\n */\nexport function draggable({ getData } = {}) {\n  const dragging = signal(false);\n\n  /** @type {ReturnType<typeof eventListener<'dragstart', HTMLElement>>} */\n  const { ref: dragstartRef, end: endDragstart } = eventListener(\n    'dragstart',\n    (event) => {\n      dragging.value = true;\n\n      if (getData) {\n        event.dataTransfer?.setData(...getData(event));\n      }\n    },\n  );\n\n  /** @type {ReturnType<typeof eventListener<'dragend', HTMLElement>>} */\n  const { ref: dragendRef, end: endDragend } = eventListener('dragend', () => {\n    dragging.value = false;\n  });\n\n  const {\n    ref: handleRef,\n    down: mouseIsDownOnHandle,\n    end: endMousedown,\n  } = mousedown();\n\n  const targetRef = forwardedRef([dragstartRef, dragendRef]);\n  const isDraggable = computed(\n    () => !handleRef.current || mouseIsDownOnHandle.value,\n  );\n\n  const end = effect(() => {\n    const target = targetRef.current;\n\n    if (target) {\n      target.draggable = isDraggable.value;\n    }\n  });\n\n  return {\n    ref: targetRef,\n    handleRef,\n    dragging: readonly(dragging),\n    end: () => {\n      end();\n      endDragstart();\n      endDragend();\n      endMousedown();\n    },\n  };\n}\n\n/**\n * @param {object} [params]\n * @param {(event: DragEvent) => void} [params.onDrop]\n */\nexport function droppable({ onDrop } = {}) {\n  const dropping = signal(false);\n\n  /** @type {ReturnType<typeof eventListener<'dragenter', HTMLElement>>} */\n  const { ref: dragenterRef, end: endDragenter } = eventListener(\n    'dragenter',\n    (event) => {\n      event.preventDefault();\n      dropping.value = true;\n    },\n  );\n\n  /** @type {ReturnType<typeof eventListener<'dragover', HTMLElement>>} */\n  const { ref: dragoverRef, end: endDragover } = eventListener(\n    'dragover',\n    (event) => event.preventDefault(),\n  );\n\n  /** @type {ReturnType<typeof eventListener<'dragleave', HTMLElement>>} */\n  const { ref: dragleaveRef, end: endDragleave } = eventListener(\n    'dragleave',\n    (event) => {\n      event.preventDefault();\n      const { clientX, clientY } = event;\n      const rect = dragleaveRef.current?.getBoundingClientRect();\n\n      if (\n        rect &&\n        (clientY <= rect.top ||\n          clientY >= rect.bottom ||\n          clientX <= rect.left ||\n          clientX >= rect.right)\n      ) {\n        dropping.value = false;\n      }\n    },\n  );\n\n  /** @type {ReturnType<typeof eventListener<'drop', HTMLElement>>} */\n  const { ref: dropRef, end: endDrop } = eventListener('drop', (event) => {\n    dropping.value = false;\n    onDrop?.(event);\n  });\n\n  const targetRef = forwardedRef([\n    dragenterRef,\n    dragoverRef,\n    dragleaveRef,\n    dropRef,\n  ]);\n\n  return {\n    ref: targetRef,\n    dropping: readonly(dropping),\n    end: () => {\n      endDragenter();\n      endDragover();\n      endDragleave();\n      endDrop();\n    },\n  };\n}\n","import { signal } from '@preact/signals-core';\nimport { eventListener } from './eventListener.js';\nimport { readonly } from '../readonly.js';\nimport { forwardedRef } from '../ref.js';\n\nexport function mousedown() {\n  const down = signal(false);\n\n  const { ref: mousedownRef, end: endMousedown } = eventListener(\n    'mousedown',\n    () => (down.value = true),\n  );\n\n  const { ref: mouseupRef, end: endMouseup } = eventListener(\n    'mouseup',\n    () => (down.value = false),\n  );\n\n  const end = () => {\n    endMousedown();\n    endMouseup();\n  };\n\n  return {\n    /** @type {import('../global.d.ts').Ref<Element>} */\n    // @ts-ignore\n    ref: forwardedRef([mousedownRef, mouseupRef]),\n    down: readonly(down),\n    end,\n    dispose: end,\n  };\n}\n","import { computed } from \"@preact/signals-core\";\nimport { ref } from \"../ref.js\";\nimport { activeElement } from \"./activeElement.js\";\n\nexport function focusManagement() {\n  /** @type {import('../global.d.ts').Ref<HTMLOrSVGElement>} */\n  const targetRef = ref();\n  const { element, end } = activeElement();\n\n  return {\n    ref: targetRef,\n    isFocused: computed(\n      () => element.value instanceof HTMLElement && targetRef.current === element.value\n    ),\n    /** @param {FocusOptions} [options] */\n    focus: (options) => {\n      targetRef.current?.focus(options);\n    },\n    dispose: end,\n  };\n}","import { computed, effect, signal } from '@preact/signals-core';\nimport { readonly } from '../readonly.js';\nimport { ref } from '../ref.js';\nimport { toggleValue } from './toggleValue.js';\n\n/** @param {boolean} [trapped] */\nexport function focusTrap(trapped) {\n  /** @param {Element} element */\n  function trapFocus(element) {\n    /** @type {NodeListOf<HTMLElement>} */\n    const focusableEls = element.querySelectorAll(\n      'a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])',\n    );\n    const firstFocusableEl = focusableEls[0];\n    const lastFocusableEl = focusableEls[focusableEls.length - 1];\n    const KEYCODE_TAB = 9;\n\n    /**\n     * @param {KeyboardEvent} e\n     */\n    const listener = (e) => {\n      const isTabPressed = e.key === 'Tab' || e.keyCode === KEYCODE_TAB;\n\n      if (!isTabPressed) {\n        return;\n      }\n\n      if (e.shiftKey) {\n        /* shift + tab */ if (document.activeElement === firstFocusableEl) {\n          lastFocusableEl.focus();\n          e.preventDefault();\n        }\n      } /* tab */ else {\n        if (document.activeElement === lastFocusableEl) {\n          firstFocusableEl.focus();\n          e.preventDefault();\n        }\n      }\n    };\n\n    // @ts-ignore\n    element.addEventListener('keydown', listener);\n\n    return listener;\n  }\n\n  /**\n   * @param {EventTarget} element\n   * @param {(event: KeyboardEvent) => void} listener\n   */\n  function untrapFocus(element, listener) {\n    // @ts-ignore\n    element.removeEventListener('keydown', listener);\n  }\n\n  const { on: trappedSignal, toggle } = toggleValue(Boolean(trapped));\n  /** @type {import('../global.d.ts').Ref<Element>} */\n  const targetRef = ref();\n\n  effect(() => {\n    if (!trappedSignal.value) {\n      return;\n    }\n\n    const element = targetRef.current;\n\n    if (element) {\n      const listener = trapFocus(element);\n\n      return () => untrapFocus(element, listener);\n    }\n  });\n\n  return {\n    trapped: readonly(trappedSignal),\n    ref: targetRef,\n    toggle,\n  };\n}\n","import { computed, effect, signal } from '@preact/signals-core';\nimport { ref } from '../ref.js';\nimport { eventListener } from './eventListener.js';\nimport { activeElement } from './activeElement.js';\nimport { endToDispose } from '../helpers/endToDispose.js';\n\nexport function keyboardListener() {\n  /** @type {import('../global.d.ts').Ref<Node>} */\n  const targetRef = ref();\n  const {\n    targetRef: kbTargetRef,\n    event,\n    end: endListener,\n  } = eventListener('keyup');\n  const { element: activeEl, end: endActive } = activeElement();\n  const isListeningToAll = computed(() => !targetRef.current);\n  const isFocusedOnTarget = computed(\n    () =>\n      targetRef.current?.contains(activeEl.value) ||\n      targetRef.current === activeEl.value,\n  );\n  const isListening = computed(\n    () => isListeningToAll.value || isFocusedOnTarget.value,\n  );\n\n  const end = effect(() => kbTargetRef(isListening.value ? window : undefined));\n\n  return endToDispose({\n    ref: targetRef,\n    event,\n    end: () => {\n      endListener();\n      endActive();\n      end();\n    },\n  });\n}\n","import { computed } from '@preact/signals-core';\nimport { eventListener } from './eventListener.js';\nimport { endToDispose } from '../helpers/endToDispose.js';\n\n/**\n * @param {any} obj\n * @returns {obj is MediaQueryList}\n */\nfunction isMqList(obj) {\n  return obj && 'matches' in obj && 'media' in obj;\n}\n\n/** @param {string} query */\nexport function mediaQuery(query) {\n  const { targetRef, event, end } = eventListener('change');\n  targetRef(window.matchMedia(query));\n\n  const mqList = computed(() =>\n    isMqList(targetRef.current) ? targetRef.current : null,\n  );\n\n  return endToDispose({\n    event,\n    matches: computed(() => {\n      console.log(mqList.value);\n      return Boolean(\n        event.value ? event.value?.matches : mqList.value?.matches,\n      );\n    }),\n    end,\n    dispose: end,\n  });\n}\n","/**\n * @template {{ end: () => void }} T\n * @param {T} obj\n * @returns {T & { dispose: T['end'] }}\n */\nexport function endToDispose(obj) {\n  return { ...obj, dispose: obj.end };\n}\n","import { computed, effect, signal } from '@preact/signals-core';\nimport { readonly } from '../readonly.js';\nimport { ref } from '../ref.js';\n\n/**\n * @param {object} [params]\n * @param {MutationObserverInit} [params.options]\n * @param {MutationCallback} [params.onMutation]\n */\nexport function mutationObserver({ options, onMutation } = {}) {\n  /** @type {import('../global.d.ts').Ref<Node>} */\n  const targetRef = ref();\n  /** @type {import('../global.d.ts').Signal<MutationRecord[]>} */\n  const recordsSignal = signal([]);\n\n  const observer = new MutationObserver((records, obs) => {\n    recordsSignal.value = records;\n    onMutation?.(records, obs);\n  });\n\n  const endEffect = effect(() => {\n    if (targetRef.current) {\n      observer.observe(targetRef.current, options);\n    }\n\n    return () => observer.disconnect();\n  });\n\n  return {\n    ref: targetRef,\n    records: readonly(recordsSignal),\n    observer: computed(() => observer),\n    end: endEffect,\n    dispose: endEffect,\n  };\n}\n","import { computed, effect, signal } from \"@preact/signals-core\";\nimport { ref } from \"../ref.js\";\nimport { readonly } from \"../readonly.js\";\n\n/**\n * @param {object} [params]\n * @param {ResizeObserverCallback} [params.onResize]\n * @returns \n */\nexport function resizeObserver({ onResize } = {}) {\n  /** @type {import('../global.d.ts').Ref<Element | null>} */\n  const targetRef = ref();\n  /** @type {import('../global.d.ts').Signal<ResizeObserverEntry[]>} */\n  const entries = signal([]);\n  const entry = computed(\n    () => entries.value.find(({ target }) => target === targetRef.current) || null\n  );\n\n  const observer = new ResizeObserver((roEntries, obs) => {\n    entries.value = roEntries;\n    onResize?.(roEntries, obs);\n  });\n\n  const dispose = effect(() => {\n    const el = targetRef.current;\n\n    if (el) {\n      observer.observe(el);\n\n      return () => observer.unobserve(el);\n    }\n  });\n\n  return {\n    ref: targetRef,\n    entry: readonly(entry),\n    dispose,\n  };\n}","/**\n * @typedef {object} ViewTransition\n * @property {Promise<void>} finished\n * @property {Promise<void>} ready\n * @property {Promise<void>} updateCallbackDone\n * @property {() => void}    skipTransition\n */\n\n/**\n * @template T\n * @param {() => Promise<T> | T} doTransition\n * @param {(vt: ViewTransition) => void} [onTransition]\n */\nexport function viewTransition(doTransition, onTransition) {\n  if ('startViewTransition' in document) {\n    return {\n      callback: () => {\n        // @ts-ignore\n        const vt = document.startViewTransition(doTransition);\n        onTransition?.(vt);\n      },\n    }\n  }\n\n  return { callback: doTransition };\n}\n"],"names":[],"version":3,"file":"tools.js.map"}